
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RoleScalarFieldEnum = {
  role_id: 'role_id',
  role_name: 'role_name'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  employee_id: 'employee_id',
  fullname: 'fullname',
  username: 'username',
  password: 'password',
  email: 'email',
  phone: 'phone',
  role_id: 'role_id'
};

exports.Prisma.CustomerScalarFieldEnum = {
  customer_id: 'customer_id',
  customer_code: 'customer_code',
  fullname: 'fullname',
  email: 'email',
  phone: 'phone',
  address_detail: 'address_detail'
};

exports.Prisma.JobScalarFieldEnum = {
  job_id: 'job_id',
  job_number: 'job_number',
  created_date: 'created_date',
  end_date: 'end_date',
  customer_id: 'customer_id',
  total_quantity: 'total_quantity',
  clothing_type: 'clothing_type',
  type_of_fabric: 'type_of_fabric',
  employee_id: 'employee_id',
  delivery_location: 'delivery_location'
};

exports.Prisma.StepScalarFieldEnum = {
  step_id: 'step_id',
  step_name: 'step_name'
};

exports.Prisma.JobStepScalarFieldEnum = {
  job_step_id: 'job_step_id',
  job_id: 'job_id',
  step_id: 'step_id'
};

exports.Prisma.PlanningScalarFieldEnum = {
  planning_id: 'planning_id',
  job_id: 'job_id',
  job_step_id: 'job_step_id',
  planned_date: 'planned_date',
  planned_quantity: 'planned_quantity'
};

exports.Prisma.ProductionLogScalarFieldEnum = {
  log_id: 'log_id',
  job_id: 'job_id',
  job_step_id: 'job_step_id',
  log_date: 'log_date',
  actual_date: 'actual_date',
  quantity: 'quantity',
  employee_id: 'employee_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Role: 'Role',
  Employee: 'Employee',
  Customer: 'Customer',
  Job: 'Job',
  Step: 'Step',
  JobStep: 'JobStep',
  Planning: 'Planning',
  ProductionLog: 'ProductionLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\65111\\OneDrive\\เดสก์ท็อป\\ปี 4 เทอม 1\\Projact\\Projact\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\65111\\OneDrive\\เดสก์ท็อป\\ปี 4 เทอม 1\\Projact\\Projact\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Role {\n  role_id   Int    @id @default(autoincrement())\n  role_name String @unique @db.VarChar(50)\n\n  employees Employee[]\n}\n\nmodel Employee {\n  employee_id Int    @id @default(autoincrement())\n  fullname    String @db.VarChar(100)\n  username    String @unique @db.VarChar(50)\n  password    String @db.VarChar(255)\n  email       String @db.VarChar(100)\n  phone       String @db.VarChar(15)\n  role_id     Int\n\n  role           Role            @relation(fields: [role_id], references: [role_id])\n  jobs           Job[]\n  productionLogs ProductionLog[]\n}\n\nmodel Customer {\n  customer_id    Int    @id @default(autoincrement())\n  customer_code  String @unique @db.VarChar(20)\n  fullname       String @db.VarChar(100)\n  email          String @db.VarChar(100)\n  phone          String @db.VarChar(15)\n  address_detail String @db.Text\n\n  jobs Job[]\n}\n\nmodel Job {\n  job_id            Int      @id @default(autoincrement())\n  job_number        String   @unique @db.VarChar(20)\n  created_date      DateTime @db.Date\n  end_date          DateTime @db.Date\n  customer_id       Int\n  total_quantity    Int\n  clothing_type     String   @db.VarChar(50)\n  type_of_fabric    String   @db.VarChar(50)\n  employee_id       Int\n  delivery_location String   @db.VarChar(255)\n\n  customer Customer @relation(fields: [customer_id], references: [customer_id])\n  employee Employee @relation(fields: [employee_id], references: [employee_id])\n\n  jobSteps       JobStep[]\n  plannings      Planning[]\n  productionLogs ProductionLog[]\n}\n\nmodel Step {\n  step_id   Int    @id @default(autoincrement())\n  step_name String @unique @db.VarChar(50)\n\n  jobSteps JobStep[]\n}\n\nmodel JobStep {\n  job_step_id Int @id @default(autoincrement())\n  job_id      Int\n  step_id     Int\n\n  job  Job  @relation(fields: [job_id], references: [job_id])\n  step Step @relation(fields: [step_id], references: [step_id])\n\n  plannings      Planning[]\n  productionLogs ProductionLog[]\n\n  @@unique([job_id, step_id])\n}\n\nmodel Planning {\n  planning_id      Int      @id @default(autoincrement())\n  job_id           Int\n  job_step_id      Int\n  planned_date     DateTime @unique @db.Date\n  planned_quantity Int\n\n  job     Job     @relation(fields: [job_id], references: [job_id])\n  jobStep JobStep @relation(fields: [job_step_id], references: [job_step_id])\n\n  @@unique([job_id, job_step_id])\n}\n\nmodel ProductionLog {\n  log_id      Int      @id @default(autoincrement())\n  job_id      Int\n  job_step_id Int\n  log_date    DateTime @db.Date\n  actual_date DateTime @unique @db.Date\n  quantity    Int\n  employee_id Int\n\n  job      Job      @relation(fields: [job_id], references: [job_id])\n  jobStep  JobStep  @relation(fields: [job_step_id], references: [job_step_id])\n  employee Employee @relation(fields: [employee_id], references: [employee_id])\n\n  @@unique([job_id, job_step_id])\n}\n",
  "inlineSchemaHash": "24c48a06e011655edf6e213b2ea90d7518e3b26ddf9e860901027e179034f16b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Role\":{\"fields\":[{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToRole\"}],\"dbName\":null},\"Employee\":{\"fields\":[{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"EmployeeToRole\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"EmployeeToJob\"},{\"name\":\"productionLogs\",\"kind\":\"object\",\"type\":\"ProductionLog\",\"relationName\":\"EmployeeToProductionLog\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"customer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customer_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fullname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_detail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CustomerToJob\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total_quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"clothing_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type_of_fabric\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"delivery_location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToJob\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToJob\"},{\"name\":\"jobSteps\",\"kind\":\"object\",\"type\":\"JobStep\",\"relationName\":\"JobToJobStep\"},{\"name\":\"plannings\",\"kind\":\"object\",\"type\":\"Planning\",\"relationName\":\"JobToPlanning\"},{\"name\":\"productionLogs\",\"kind\":\"object\",\"type\":\"ProductionLog\",\"relationName\":\"JobToProductionLog\"}],\"dbName\":null},\"Step\":{\"fields\":[{\"name\":\"step_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"step_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobSteps\",\"kind\":\"object\",\"type\":\"JobStep\",\"relationName\":\"JobStepToStep\"}],\"dbName\":null},\"JobStep\":{\"fields\":[{\"name\":\"job_step_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"step_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToJobStep\"},{\"name\":\"step\",\"kind\":\"object\",\"type\":\"Step\",\"relationName\":\"JobStepToStep\"},{\"name\":\"plannings\",\"kind\":\"object\",\"type\":\"Planning\",\"relationName\":\"JobStepToPlanning\"},{\"name\":\"productionLogs\",\"kind\":\"object\",\"type\":\"ProductionLog\",\"relationName\":\"JobStepToProductionLog\"}],\"dbName\":null},\"Planning\":{\"fields\":[{\"name\":\"planning_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_step_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"planned_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"planned_quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToPlanning\"},{\"name\":\"jobStep\",\"kind\":\"object\",\"type\":\"JobStep\",\"relationName\":\"JobStepToPlanning\"}],\"dbName\":null},\"ProductionLog\":{\"fields\":[{\"name\":\"log_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_step_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"log_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actual_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employee_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToProductionLog\"},{\"name\":\"jobStep\",\"kind\":\"object\",\"type\":\"JobStep\",\"relationName\":\"JobStepToProductionLog\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToProductionLog\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

